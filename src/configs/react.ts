import type { FlatESLintConfig, Rules } from 'eslint-define-config'
import { pluginReact, pluginReactHooks, pluginReactRefresh, pluginStylisticJSX } from '../plugins'
import { GLOB_JSX, GLOB_TSX } from '../globs'

const stylisticRules: Partial<Rules> = {
  '@stylistic/jsx-closing-bracket-location': 'error',
  '@stylistic/jsx-closing-tag-location': 'error',
  '@stylistic/jsx-curly-brace-presence': ['error', {
    children: 'ignore',
    props: 'ignore',
    propElementValues: 'always',
  }],
  '@stylistic/jsx-curly-spacing': 'error',
  '@stylistic/jsx-equals-spacing': 'error',
  '@stylistic/jsx-first-prop-new-line': ['error', 'multiline-multiprop'],
  '@stylistic/jsx-indent': ['error', 2],
  '@stylistic/jsx-indent-props': ['error', 2],
  '@stylistic/jsx-one-expression-per-line': 'error',
  '@stylistic/jsx-props-no-multi-spaces': 'error',
  '@stylistic/jsx-sort-props': 'error',
  '@stylistic/jsx-tag-spacing': ['error', {
    afterOpening: 'never',
    beforeClosing: 'never',
    beforeSelfClosing: 'proportional-always',
    closingSlash: 'allow',
  }],
}

export const reactConfig: FlatESLintConfig[] = [{
  plugins: {
    'react': pluginReact,
    'react-hooks': pluginReactHooks,
    'react-refresh': pluginReactRefresh,
    '@stylistic/jsx': pluginStylisticJSX,
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
}, {
  files: [GLOB_JSX, GLOB_TSX],
  languageOptions: {
    parserOptions: {
      ecmaFeatures: {
        jsx: true,
      },
    },
  },
  rules: {
    'react/button-has-type': 'error',
    'react/display-name': 'error',
    'react/hook-use-state': 'error',
    'react/jsx-key': 'error',
    'react/jsx-no-comment-textnodes': 'error',
    'react/jsx-no-duplicate-props': 'error',
    'react/jsx-no-leaked-render': 'error',
    'react/jsx-no-script-url': 'error',
    'react/jsx-no-target-blank': 'error',
    'react/jsx-no-undef': 'error',
    'react/jsx-no-useless-fragment': 'error',
    'react/jsx-pascal-case': 'error',
    'react/jsx-uses-react': 'error',
    'react/jsx-uses-vars': 'error',
    'react/no-array-index-key': 'error',
    'react/no-arrow-function-lifecycle': 'error',
    'react/no-children-prop': 'error',
    'react/no-danger': 'error',
    'react/no-danger-with-children': 'error',
    'react/no-deprecated': 'error',
    'react/no-did-update-set-state': 'error',
    'react/no-direct-mutation-state': 'error',
    'react/no-find-dom-node': 'error',
    'react/no-is-mounted': 'error',
    'react/no-namespace': 'error',
    'react/no-redundant-should-component-update': 'error',
    'react/no-render-return-value': 'error',
    'react/no-string-refs': 'error',
    'react/no-this-in-sfc': 'error',
    'react/no-typos': 'error',
    'react/no-unescaped-entities': 'error',
    'react/no-unknown-property': 'error',
    'react/no-unstable-nested-components': 'error',
    'react/no-unused-class-component-methods': 'error',
    'react/no-unused-prop-types': 'error',
    'react/no-unused-state': 'error',
    'react/no-will-update-set-state': 'error',
    'react/prefer-es6-class': 'error',
    'react/prefer-exact-props': 'error',
    'react/prefer-read-only-props': 'error',
    'react/prefer-stateless-function': 'error',
    'react/prop-types': 'error',
    'react/require-render-return': 'error',
    'react/self-closing-comp': 'error',
    'react/sort-comp': 'error',
    'react/sort-prop-types': 'error',
    'react/style-prop-object': 'error',
    'react/void-dom-elements-no-children': 'error',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'error',
    'react-refresh/only-export-components': 'error',
    ...stylisticRules,
  },
}]
